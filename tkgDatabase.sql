BEGIN;
CREATE DATABASE IF NOT EXISTS tkgDatabase;
USE tkgDatabase;

CREATE TABLE IF NOT EXISTS ACCOUNTS (
ACCOUNT_ID INT PRIMARY KEY,
ACCOUNT_USERNAME VARCHAR(45),
ACCOUNT_PASSWORD VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS MEMBERS (
MEM_ID        INT PRIMARY KEY,
MEM_FNAME     VARCHAR(45) NOT NULL,
MEM_LNAME     VARCHAR(45) NOT NULL,
MEM_PHONE	  VARCHAR(10) NOT NULL,
MEM_ADDRESS	  VARCHAR(45),
MEM_MEMBERSHIP VARCHAR(45) NOT NULL,
ACCOUNT_ID INT,
FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS GYMS (
GYM_ID INT PRIMARY KEY,
GYM_NAME VARCHAR(45),
GYM_LOCATION VARCHAR(45) NOT NULL,
GYM_PHONE VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS VENDORS (
VENDOR_ID INT PRIMARY KEY,
VENDOR_NAME VARCHAR(45) NOT NULL,
VENDOR_LOCATION VARCHAR(45) NOT NULL,	
VENDOR_PHONE VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS INSTRUCTORS (
INSTRUCTOR_ID INT PRIMARY KEY,
INSTRUCTOR_FNAME VARCHAR(45) NOT NULL,
INSTRUCTOR_LNAME VARCHAR(45) NOT NULL,
GYM_ID INT,
FOREIGN KEY (GYM_ID) REFERENCES GYMS(GYM_ID)
);

CREATE TABLE IF NOT EXISTS CLASSES (
CLASS_ID INT PRIMARY KEY,
CLASS_NAME VARCHAR(45) NOT NULL,
CLASS_TIMESTART TIME NOT NULL,
CLASS_TIMEEND TIME NOT NULL,
CLASS_DAYS VARCHAR(45) NOT NULL,
INSTRUCTOR_ID INT,
GYM_ID INT,
FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(INSTRUCTOR_ID),
FOREIGN KEY (GYM_ID) REFERENCES GYMS(GYM_ID)
);

CREATE TABLE IF NOT EXISTS CLASS_ENROLL (
ACCOUNT_ID INT,
CLASS_ID INT,
INSTRUCTOR_ID INT,
PRIMARY KEY (ACCOUNT_ID, CLASS_ID, INSTRUCTOR_ID),
FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID),
FOREIGN KEY (CLASS_ID) REFERENCES CLASSES(CLASS_ID),
FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(INSTRUCTOR_ID)
);

CREATE TABLE IF NOT EXISTS VENDOR_EQUIPMENT (
VENDOREQUIPMENT_ID INT PRIMARY KEY,
VENDOREQUIPMENT_NAME VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS VENDOR_SUPPLY (
VENDOR_ID INT,
GYM_ID INT,
VENDOREQUIPMENT_ID INT,
PRIMARY KEY (VENDOR_ID, GYM_ID, VENDOREQUIPMENT_ID),
FOREIGN KEY (VENDOR_ID) REFERENCES VENDORS(VENDOR_ID),
FOREIGN KEY (GYM_ID) REFERENCES GYMS(GYM_ID),
FOREIGN KEY (VENDOREQUIPMENT_ID) REFERENCES VENDOR_EQUIPMENT(VENDOREQUIPMENT_ID)
);

-- ACCOUNTS rows
INSERT INTO ACCOUNTS VALUES (0, 'admin', 'adminsonly');
INSERT INTO ACCOUNTS VALUES (1, 'marka', 'pass');
INSERT INTO ACCOUNTS VALUES (2, 'matts', 'pass');
INSERT INTO ACCOUNTS VALUES (3, 'steved', 'pass');

-- MEMBERS rows
INSERT INTO MEMBERS VALUES (1, 'Mark','Adams', '3132025863', '123 Main Street, Detroit, MI 48201', 'Premium', 1);
INSERT INTO MEMBERS VALUES (2, 'Matthew','Samual', '2485317212', '123 Tree Street, Auburn Hills, MI 48326', 'Standard', 2);
INSERT INTO MEMBERS VALUES (3, 'Steve', 'David', '2488321683', '123 Oak Rd, Auburn Hills, MI 48326', 'Premium', 3);

-- GYMS rows
INSERT INTO GYMS VALUES (0, 'Auburn Hills', '123 Fitness Ave, Auburn Hills, MI 48326', '2482011011');
INSERT INTO GYMS VALUES (1, 'Detroit', '123 Yoga Rd, Detroit, MI 48201', '3135531791');
INSERT INTO GYMS VALUES (2, 'Novi', '123 Excercise St, Sterling Heights, MI 48312', '2487034213');

-- VENDORS rows
 INSERT INTO VENDORS VALUES (0, 'GymSupplyInc', '123 Gym Supply St, Auburn Hills, MI 48326', '2481110223');
 INSERT INTO VENDORS VALUES (1, 'FitnessCorp', '123 Gym Equipment Rd, Detroit, MI 48201', '3131235678');

-- INSTRUCTORS rows
INSERT INTO INSTRUCTORS VALUES (0, 'Frank', 'Smith', 0);
INSERT INTO INSTRUCTORS VALUES (1, 'Dylan', 'Smith', 1);
INSERT INTO INSTRUCTORS VALUES (2, 'Mark', 'Joe', 1);

-- CLASSES rows
INSERT INTO CLASSES VALUES (0, 'Yoga', '08:00:00', '09:00:00', 'M T', 0, 0);
INSERT INTO CLASSES VALUES (1, 'Weightlifting', '10:00:00', '11:00:00', 'T TH', 0, 0);
INSERT INTO CLASSES VALUES (2, 'Cardio', '08:00:00', '09:00:00', 'M T', 1, 1);

-- CLASS_ENROLL rows
INSERT INTO CLASS_ENROLL VALUES (1, 0, 0);
INSERT INTO CLASS_ENROLL VALUES (1, 1, 0);
INSERT INTO CLASS_ENROLL VALUES (2, 0, 1);
INSERT INTO CLASS_ENROLL VALUES (1, 2, 2);

-- VENDOR_EQUIPMENT rows
INSERT INTO VENDOR_EQUIPMENT VALUES (0, 'Dumbbells');
INSERT INTO VENDOR_EQUIPMENT VALUES (1, 'Weights');
INSERT INTO VENDOR_EQUIPMENT VALUES (2, 'Mats');

-- VENDOR_SUPPLY rows
INSERT INTO VENDOR_SUPPLY VALUES (0, 0, 1);
